{{- /*gotype: github.com/Jleagle/frigate-share.Data*/ -}}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Camera Events</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        body {
            margin: 10px;
        }
    </style>
</head>
<body>

<div class="container">

    <h1>Camera Events</h1>

    {{ range .Events }}
        <div class="card mb-3">
            <div class="card-header">{{.LabelNice}} in {{.CameraNice}}: {{.Start}}</div>
            <div class="ratio ratio-16x9 card-img-top">
                <video controls="controls" preload="none" class="rounded-bottom">
                    <source src="/events/{{.ID}}" type="video/mp4">
                </video>
            </div>
        </div>
    {{end}}
</div>

<script>
  function handleIntersection(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const video = entry.target;
        if (video.getAttribute('preload') === 'none') {
          video.setAttribute('preload', 'auto');
        }
        observer.unobserve(video);
      }
    });
  }

  const observer = new IntersectionObserver(handleIntersection, {
    root: null,
    threshold: 0,
    rootMargin: '500px',
  });

  const videos = document.querySelectorAll('video');

  videos.forEach(video => {

    // preload videos that are nearby
    observer.observe(video);

    // Move the clicked video the the center
    video.addEventListener('click', (event) => {

      const videoRect = video.getBoundingClientRect();
      const windowHeight = window.innerHeight || document.documentElement.clientHeight;
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;
      const scrollAmount = scrollTop + (videoRect.top + videoRect.height / 2) - (windowHeight / 2);

      window.scrollTo({
        top: scrollAmount,
        behavior: 'smooth'
      });
    });

    // Pause videos when you play one
    video.addEventListener('play', (event) => {

      videos.forEach(video2 => {
        if (video2 !== event.target && !video2.paused) {
          video2.pause();
        }
      });
    });
  });
</script>

</body>
</html>
